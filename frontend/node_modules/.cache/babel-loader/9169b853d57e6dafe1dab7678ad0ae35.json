{"ast":null,"code":"var _jsxFileName = \"/Users/lauraschultz/Documents/projects/trivia/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.countdownTimer = n => {\n      this.setState({\n        countdownTime: n\n      });\n\n      if (n > 0) {\n        setTimeout(() => this.countdownTimer(n - 1), 1000);\n      }\n    };\n\n    this.handleNewGameID = gameID => {\n      this.setState({\n        gameID: gameID\n      });\n    };\n\n    this.joinGame = () => {\n      this.setState({\n        isGameCreator: false\n      });\n      this.socket.emit(\"join game\", this.state.gameID, callbackData => {\n        if (callbackData.sucess) {\n          this.setState({\n            appState: \"join\"\n          }); // this.handleTyping(true);\n        } else {\n          console.log(callbackData.errorMsg);\n        }\n      });\n    };\n\n    this.createNewGame = () => {\n      this.setState({\n        isGameCreator: true,\n        appState: \"join\"\n      });\n      this.socket.emit(\"create new game\", {}, gameID => {\n        console.log(\"got gameid from callback: \" + gameID);\n        this.setState({\n          gameID: gameID\n        });\n      });\n      axios.get(`${this.SERVER}/categories`).then(cats => {\n        console.log(cats);\n        this.setState({\n          categories: cats\n        });\n      });\n    };\n\n    this.startGame = () => {\n      this.socket.emit(\"start game\", {\n        gameID: this.state.gameID,\n        data: \"whatsup\"\n      });\n      this.setState({\n        appState: \"play\"\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(\"changed \" + event.target.name + \" to \" + event.target.value);\n    };\n\n    this.handleSubmitName = () => {\n      // this.handleTyping(false);\n      this.socket.emit(\"submit name\", {\n        gameID: this.state.gameID,\n        playerName: this.state.playerName\n      });\n      this.socket.emit(\"joining\", {\n        numInc: -1,\n        gameID: this.state.gameID\n      });\n    };\n\n    this.SERVER = \"http://localhost:4000\"; //\"https://crazytrivia.herokuapp.com/\"\n\n    this.socket = io.connect(this.SERVER);\n    this.state = {\n      userAnswer: \"-1\",\n      isCorrectAnswer: 0,\n      // ⬆️ https://stackoverflow.com/a/4666482/4493137\n      gameID: \"\",\n      playerName: \"\",\n      appState: \"init\",\n      isGameCreator: false,\n      numTypers: 0\n    };\n  }\n\n  componentDidMount() {\n    this.socket.on(\"start countdown\", countdownLength => {\n      this.countdownTimer(countdownLength);\n      this.setState({\n        appState: \"play\"\n      });\n    });\n    this.socket.on(\"question\", q => {\n      this.setState({\n        currentQuestion: q,\n        correctAnswer: undefined,\n        userAnswer: \"-1\"\n      });\n    });\n    this.socket.on(\"request answer\", () => {\n      // validate on client or server side????????\n      // server also needs to know for the score... so might as well do it there....\n      this.socket.emit(\"validate answer\", {\n        answer: this.state.userAnswer,\n        questionNum: this.state.currentQuestion.index,\n        gameID: this.state.gameID\n      }, ({\n        isCorrect,\n        correctAnswer\n      }) => {\n        this.setState({\n          correctAnswer: correctAnswer\n        });\n      });\n    });\n    this.socket.on(\"number typers\", n => this.setState({\n      numTypers: n\n    }));\n    this.socket.on(\"players\", p => this.setState({\n      players: p\n    }));\n    this.socket.on(\"joining\", n => {\n      console.log(\"num joiners is \" + n);\n      this.setState({\n        numJoiners: n\n      });\n    });\n    this.socket.on(\"game over\", () => this.setState({\n      currentQuestion: undefined,\n      correctAnswer: undefined,\n      userAnswer: \"-1\"\n    }));\n  }\n\n  render() {\n    if (this.state.appState === \"init\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"gameID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, \"join a game:\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"gameID\",\n        name: \"gameID\",\n        placeholder: \"game code\",\n        value: this.state.gameID,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.joinGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, \"join\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }), \"---- or ----\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.createNewGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, \"create new game\"));\n    }\n\n    if (this.state.appState === \"join\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, this.state.gameID), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"playerName\",\n        onChange: this.handleChange,\n        value: this.state.playerName,\n        placeholder: \"your name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleSubmitName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, \"submit\"), this.state.numJoiners > 0 && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      }, \"someone is joining...\")), this.state.players && /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, \"Players:\"), Object.entries(this.state.players).map(([id, pl]) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 24\n          }\n        }, pl.name);\n      })), this.state.isGameCreator && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.startGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, \"start game\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, this.state.countdownTime > 0 && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, \"starting game in \", this.state.countdownTime), this.state.currentQuestion && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, this.state.currentQuestion.question), this.state.currentQuestion.answers.map((a, idx) => /*#__PURE__*/React.createElement(\"label\", {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"userAnswer\",\n      value: idx,\n      onChange: this.handleChange,\n      className: idx === this.state.correctAnswer ? \"right\" : \"wrong\",\n      checked: this.state.userAnswer === idx.toString(),\n      disabled: this.state.correctAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }), a))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }, this.state.correctAnswer), this.state.players && /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, \"Leaderboard:\"), Object.entries(this.state.players).map(([id, pl]) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 19\n        }\n      }, pl.name), \": \", pl.score);\n    })));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/lauraschultz/Documents/projects/trivia/frontend/src/App.js"],"names":["React","Component","io","axios","App","constructor","props","countdownTimer","n","setState","countdownTime","setTimeout","handleNewGameID","gameID","joinGame","isGameCreator","socket","emit","state","callbackData","sucess","appState","console","log","errorMsg","createNewGame","get","SERVER","then","cats","categories","startGame","data","handleChange","event","target","name","value","handleSubmitName","playerName","numInc","connect","userAnswer","isCorrectAnswer","numTypers","componentDidMount","on","countdownLength","q","currentQuestion","correctAnswer","undefined","answer","questionNum","index","isCorrect","p","players","numJoiners","render","Object","entries","map","id","pl","question","answers","a","idx","toString","score"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\"\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.SERVER = \"http://localhost:4000\" //\"https://crazytrivia.herokuapp.com/\"\n    this.socket = io.connect(this.SERVER);\n    this.state = {\n      userAnswer: \"-1\",\n      isCorrectAnswer: 0,\n      // ⬆️ https://stackoverflow.com/a/4666482/4493137\n      gameID: \"\",\n      playerName: \"\",\n      appState: \"init\",\n      isGameCreator: false,\n      numTypers: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.socket.on(\"start countdown\", (countdownLength) => {\n      this.countdownTimer(countdownLength);\n      this.setState({\n        appState: \"play\",\n      });\n    });\n    this.socket.on(\"question\", (q) => {\n      this.setState({\n        currentQuestion: q,\n        correctAnswer: undefined,\n        userAnswer: \"-1\",\n      });\n    });\n    this.socket.on(\"request answer\", () => {\n      // validate on client or server side????????\n      // server also needs to know for the score... so might as well do it there....\n      this.socket.emit(\n        \"validate answer\",\n        {\n          answer: this.state.userAnswer,\n          questionNum: this.state.currentQuestion.index,\n          gameID: this.state.gameID,\n        },\n        ({ isCorrect, correctAnswer }) => {\n          this.setState({ correctAnswer: correctAnswer });\n        }\n      );\n    });\n    this.socket.on(\"number typers\", (n) => this.setState({ numTypers: n }));\n    this.socket.on(\"players\", (p) => this.setState({ players: p }));\n    this.socket.on(\"joining\", (n) => {\n      console.log(\"num joiners is \" + n);\n      this.setState({ numJoiners: n });\n    });\n    this.socket.on(\"game over\", () =>\n      this.setState({\n        currentQuestion: undefined,\n        correctAnswer: undefined,\n        userAnswer: \"-1\",\n      })\n    );\n  }\n\n  countdownTimer = (n) => {\n    this.setState({ countdownTime: n });\n    if (n > 0) {\n      setTimeout(() => this.countdownTimer(n - 1), 1000);\n    }\n  };\n\n  handleNewGameID = (gameID) => {\n    this.setState({ gameID: gameID });\n  };\n\n  joinGame = () => {\n    this.setState({ isGameCreator: false });\n    this.socket.emit(\"join game\", this.state.gameID, (callbackData) => {\n      if (callbackData.sucess) {\n        this.setState({ appState: \"join\" });\n        // this.handleTyping(true);\n      } else {\n        console.log(callbackData.errorMsg);\n      }\n    });\n  };\n\n  createNewGame = () => {\n    this.setState({ isGameCreator: true, appState: \"join\" });\n    this.socket.emit(\"create new game\", {}, (gameID) => {\n      console.log(\"got gameid from callback: \" + gameID);\n      this.setState({ gameID: gameID });\n    });\n    axios.get(`${this.SERVER}/categories`).then((cats) => {\n      console.log(cats);\n      this.setState({categories: cats})\n    })\n  };\n\n  startGame = () => {\n    this.socket.emit(\"start game\", {\n      gameID: this.state.gameID,\n      data: \"whatsup\",\n    });\n    this.setState({ appState: \"play\" });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n    console.log(\"changed \" + event.target.name + \" to \" + event.target.value);\n  };\n\n  // handleTyping = (isTyping) => {\n  //   this.socket.emit(\"handle typer\", {\n  //     gameID: this.state.gameID,\n  //     incNum: isTyping ? 1 : -1,\n  //   });\n  // };\n\n  handleSubmitName = () => {\n    // this.handleTyping(false);\n    this.socket.emit(\"submit name\", {\n      gameID: this.state.gameID,\n      playerName: this.state.playerName,\n    });\n    this.socket.emit(\"joining\", { numInc: -1, gameID: this.state.gameID });\n  };\n\n  render() {\n    if (this.state.appState === \"init\") {\n      return (\n        <div>\n          <label for=\"gameID\">join a game:</label>\n          <input\n            id=\"gameID\"\n            name=\"gameID\"\n            placeholder=\"game code\"\n            value={this.state.gameID}\n            onChange={this.handleChange}\n          />\n          <button onClick={this.joinGame}>join</button>\n          <br />\n          ---- or ----\n          <br />\n          <button onClick={this.createNewGame}>create new game</button>\n        </div>\n      );\n    }\n    if (this.state.appState === \"join\") {\n      return (\n        <div>\n          <p>{this.state.gameID}</p>\n          <input\n            name=\"playerName\"\n            onChange={this.handleChange}\n            value={this.state.playerName}\n            placeholder=\"your name\"\n          />\n          <button onClick={this.handleSubmitName}>submit</button>\n          \n          {this.state.numJoiners > 0 && (\n            <p>\n              <i>someone is joining...</i>\n            </p>\n          )}\n          {this.state.players && (\n            <ul>\n              <h2>Players:</h2>\n              {Object.entries(this.state.players).map(([id, pl]) => {\n                return <li key={id}>{pl.name}</li>;\n              })}\n            </ul>\n          )}\n\n{this.state.isGameCreator && (\n            <button onClick={this.startGame}>start game</button>\n          )}\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.countdownTime > 0 && (\n          <p>starting game in {this.state.countdownTime}</p>\n        )}\n        {this.state.currentQuestion && (\n          <div>\n            <p>{this.state.currentQuestion.question}</p>\n            {this.state.currentQuestion.answers.map((a, idx) => (\n              <label key={idx}>\n                <input\n                  type=\"radio\"\n                  name=\"userAnswer\"\n                  value={idx}\n                  onChange={this.handleChange}\n                  className={\n                    idx === this.state.correctAnswer ? \"right\" : \"wrong\"\n                  }\n                  checked={this.state.userAnswer === idx.toString()}\n                  disabled={this.state.correctAnswer}\n                />\n                {a}\n              </label>\n            ))}\n          </div>\n        )}\n        <p>{this.state.correctAnswer}</p>\n\n        {this.state.players && (\n          <ul>\n            <h2>Leaderboard:</h2>\n            {Object.entries(this.state.players).map(([id, pl]) => {\n              return (\n                <li key={id}>\n                  <b>{pl.name}</b>: {pl.score}\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}