{"ast":null,"code":"var _jsxFileName = \"/Users/lauraschultz/Documents/projects/trivia/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewGameID = gameID => {\n      this.setState({\n        gameID: gameID\n      });\n    };\n\n    this.joinGame = () => {\n      this.setState({\n        isGameCreator: false\n      });\n      this.socket.emit(\"join game\", this.state.gameID, callbackData => {\n        if (callbackData.sucess) {\n          this.setState({\n            appState: \"join\"\n          });\n        } else {\n          console.log(callbackData.errorMsg);\n        }\n      });\n    };\n\n    this.createNewGame = () => {\n      this.setState({\n        isGameCreator: true,\n        appState: \"join\"\n      });\n      this.socket.emit(\"create new game\", {}, gameID => {\n        console.log(\"got gameid from callback: \" + gameID);\n        this.setState({\n          gameID: gameID\n        });\n      });\n    };\n\n    this.startGame = () => {\n      this.socket.emit(\"start game\", {\n        gameID: this.state.gameID,\n        data: \"whatsup\"\n      });\n      this.setState({\n        appState: \"play\"\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleTyping = isTyping => {\n      this.socket.emit(\"handle typer\", {\n        gameID: this.state.gameID,\n        incNum: isTyping ? 1 : -1\n      });\n    };\n\n    this.handleSubmitName = () => {\n      this.handleTyping(false);\n      this.socket.emit('submit name', {\n        gameID: this.state.gameID,\n        playerName: this.state.playerName\n      });\n    };\n\n    this.socket = io.connect(\"http://localhost:4000\");\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      gameID: \"\",\n      playerName: \"\",\n      appState: \"init\",\n      isGameCreator: false,\n      numTypers: 0\n    };\n  }\n\n  componentDidMount() {\n    this.socket.on(\"question\", q => {\n      this.setState({\n        appState: \"play\",\n        question: q,\n        answer: \"\"\n      });\n    });\n    this.socket.on(\"answer\", a => {\n      this.setState({\n        answer: a\n      });\n    });\n    this.socket.on(\"number typers\", n => this.setState({\n      numTypers: n\n    }));\n    this.socket.on(\"players\", p => this.setState({\n      players: p\n    }));\n  }\n\n  render() {\n    if (this.state.appState === \"init\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"gameID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, \"join a game:\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"gameID\",\n        name: \"gameID\",\n        placeholder: \"game code\",\n        value: this.state.gameID,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.joinGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, \"join\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }), \"---- or ----\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.createNewGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, \"create new game\"));\n    }\n\n    if (this.state.appState === \"join\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, this.state.gameID), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"playerName\",\n        onChange: () => {\n          this.handleTyping(true);\n          this.handleChange();\n        },\n        placeholder: \"your name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: handleSubmitName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, \"submit\"), this.state.isGameCreator && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.startGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, \"start game\"), this.state.numTypers && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 39\n        }\n      }, \"someone is joining...\")), this.state.players && Object.entries(this.state.players).map(([id, pl]) => {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          key: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }\n        }, pl.name);\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, this.state.question && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, this.state.question.question), this.state.question.answers.map(a => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: a,\n      name: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: a,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, a)))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, this.state.answer));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/lauraschultz/Documents/projects/trivia/frontend/src/App.js"],"names":["React","Component","io","App","constructor","props","handleNewGameID","gameID","setState","joinGame","isGameCreator","socket","emit","state","callbackData","sucess","appState","console","log","errorMsg","createNewGame","startGame","data","handleChange","event","target","name","value","handleTyping","isTyping","incNum","handleSubmitName","playerName","connect","question","answer","numTypers","componentDidMount","on","q","a","n","p","players","render","Object","entries","map","id","pl","answers"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.socket = io.connect(\"http://localhost:4000\");\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      gameID: \"\",\n      playerName: \"\",\n      appState: \"init\",\n      isGameCreator: false,\n      numTypers: 0\n    };\n  }\n\n  componentDidMount() {\n    this.socket.on(\"question\", (q) => {\n      this.setState({ appState: \"play\", question: q, answer: \"\" });\n    });\n    this.socket.on(\"answer\", (a) => {\n      this.setState({ answer: a });\n    });\n    this.socket.on(\"number typers\", (n) => this.setState({numTypers:n}))\n    this.socket.on(\"players\", (p) => this.setState({players: p}))\n  }\n\n  handleNewGameID = (gameID) => {\n    this.setState({ gameID: gameID });\n  };\n\n  joinGame = () => {\n    this.setState({ isGameCreator: false });\n    this.socket.emit(\"join game\", this.state.gameID, (callbackData) => {\n      if (callbackData.sucess) {\n        this.setState({ appState: \"join\" });\n      } else {\n        console.log(callbackData.errorMsg);\n      }\n    });\n  };\n\n  createNewGame = () => {\n    this.setState({ isGameCreator: true, appState: \"join\" });\n    this.socket.emit(\"create new game\", {}, (gameID) => {\n      console.log(\"got gameid from callback: \" + gameID);\n      this.setState({ gameID: gameID });\n    });\n  };\n\n  startGame = () => {\n    this.socket.emit(\"start game\", {\n      gameID: this.state.gameID,\n      data: \"whatsup\",\n    });\n    this.setState({ appState: \"play\" });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleTyping = (isTyping) => {\n    this.socket.emit(\"handle typer\", {gameID: this.state.gameID, incNum: isTyping ? 1 : -1});\n  };\n\n  handleSubmitName = () => {\n    this.handleTyping(false);\n    this.socket.emit('submit name', {gameID: this.state.gameID, playerName: this.state.playerName})\n  }\n\n  render() {\n    if (this.state.appState === \"init\") {\n      return (\n        <div>\n          <label for=\"gameID\">join a game:</label>\n          <input\n            id=\"gameID\"\n            name=\"gameID\"\n            placeholder=\"game code\"\n            value={this.state.gameID}\n            onChange={this.handleChange}\n          />\n          <button onClick={this.joinGame}>join</button>\n          <br />\n          ---- or ----\n          <br />\n          <button onClick={this.createNewGame}>create new game</button>\n        </div>\n      );\n    }\n    if (this.state.appState === \"join\") {\n      return (\n        <div>\n          <p>{this.state.gameID}</p>\n          <input\n            name=\"playerName\"\n            onChange={() => {\n              this.handleTyping(true);\n              this.handleChange();\n            }}\n            placeholder=\"your name\"\n          />\n          <button onClick={handleSubmitName}>submit</button>\n          {this.state.isGameCreator && (\n            <button onClick={this.startGame}>start game</button>\n          )}\n          {this.state.numTypers && <p><i>someone is joining...</i></p>}\n          {this.state.players && Object.entries(this.state.players).map(([id, pl]) => {\n            return (<p key={id}>\n              {pl.name}\n            </p>)\n          })}\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.question && (\n          <div>\n            <p>{this.state.question.question}</p>\n            {this.state.question.answers.map((a) => (\n              <div>\n                <input type=\"radio\" id={a} name=\"answer\" />\n                <label for={a}>{a}</label>\n              </div>\n            ))}\n          </div>\n        )}\n        <p>{this.state.answer}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}