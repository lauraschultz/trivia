{"ast":null,"code":"var _jsxFileName = \"/Users/lauraschultz/Documents/projects/trivia/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewGameID = gameID => {\n      this.setState({\n        gameID: gameID\n      });\n    };\n\n    this.joinGame = () => {\n      this.setState({\n        isGameCreator: false\n      });\n      this.socket.emit(\"join game\", this.state.gameID, callbackData => {\n        if (callbackData.sucess) {\n          this.setState({\n            appState: \"join\"\n          }); // this.handleTyping(true);\n        } else {\n          console.log(callbackData.errorMsg);\n        }\n      });\n    };\n\n    this.createNewGame = () => {\n      this.setState({\n        isGameCreator: true,\n        appState: \"join\"\n      });\n      this.socket.emit(\"create new game\", {}, gameID => {\n        console.log(\"got gameid from callback: \" + gameID);\n        this.setState({\n          gameID: gameID\n        });\n      });\n    };\n\n    this.startGame = () => {\n      this.socket.emit(\"start game\", {\n        gameID: this.state.gameID,\n        data: \"whatsup\"\n      });\n      this.setState({\n        appState: \"play\"\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmitName = () => {\n      // this.handleTyping(false);\n      this.socket.emit(\"submit name\", {\n        gameID: this.state.gameID,\n        playerName: this.state.playerName\n      });\n    };\n\n    this.socket = io.connect(\"http://localhost:4000\");\n    this.state = {\n      question: \"\",\n      correctAnswer: \"\",\n      userAnswer: \"\",\n      isCorrectAnswer: 0,\n      // ⬆️ https://stackoverflow.com/a/4666482/4493137\n      gameID: \"\",\n      playerName: \"\",\n      appState: \"init\",\n      isGameCreator: false,\n      numTypers: 0\n    };\n  }\n\n  componentDidMount() {\n    this.socket.on(\"question\", q => {\n      this.setState({\n        appState: \"play\",\n        question: q,\n        correctAnswer: \"\"\n      });\n    });\n    this.socket.on(\"answer\", a => {\n      this.setState({\n        correctAnswer: a\n      }); // validate on client or server side????????\n      // server also needs to know for the score... so might as well do it there....\n\n      this.socket.emit(\"validate answer\", {\n        answer: userAnswer,\n        gameID: this.state.gameID\n      }, isCorrect => {\n        this.setState({\n          isCorrectAnswer: isCorrect ? 1 : -1\n        });\n      });\n    }); // this.socket.on(\"number typers\", (n) => this.setState({ numTypers: n }));\n\n    this.socket.on(\"players\", p => this.setState({\n      players: p\n    }));\n  }\n\n  render() {\n    if (this.state.appState === \"init\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"gameID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, \"join a game:\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"gameID\",\n        name: \"gameID\",\n        placeholder: \"game code\",\n        value: this.state.gameID,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.joinGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, \"join\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }), \"---- or ----\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.createNewGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, \"create new game\"));\n    }\n\n    if (this.state.appState === \"join\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, this.state.gameID), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"playerName\",\n        onChange: this.handleChange,\n        value: this.state.playerName,\n        placeholder: \"your name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleSubmitName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, \"submit\"), this.state.isGameCreator && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.startGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, \"start game\"), this.state.players && /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }, \"Players:\"), Object.entries(this.state.players).map(([id, pl]) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 24\n          }\n        }, pl.name);\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, this.state.question && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, this.state.question.question), this.state.question.answers.map(a => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: a,\n      name: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: a,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, a)))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, this.state.correctAnswer));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/lauraschultz/Documents/projects/trivia/frontend/src/App.js"],"names":["React","Component","io","App","constructor","props","handleNewGameID","gameID","setState","joinGame","isGameCreator","socket","emit","state","callbackData","sucess","appState","console","log","errorMsg","createNewGame","startGame","data","handleChange","event","target","name","value","handleSubmitName","playerName","connect","question","correctAnswer","userAnswer","isCorrectAnswer","numTypers","componentDidMount","on","q","a","answer","isCorrect","p","players","render","Object","entries","map","id","pl","answers"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.socket = io.connect(\"http://localhost:4000\");\n    this.state = {\n      question: \"\",\n      correctAnswer: \"\",\n      userAnswer: \"\",\n      isCorrectAnswer: 0,\n      // ⬆️ https://stackoverflow.com/a/4666482/4493137\n      gameID: \"\",\n      playerName: \"\",\n      appState: \"init\",\n      isGameCreator: false,\n      numTypers: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.socket.on(\"question\", (q) => {\n      this.setState({ appState: \"play\", question: q, correctAnswer: \"\" });\n    });\n    this.socket.on(\"answer\", (a) => {\n      this.setState({ correctAnswer: a });\n      // validate on client or server side????????\n      // server also needs to know for the score... so might as well do it there....\n      this.socket.emit(\"validate answer\", {answer: userAnswer, gameID: this.state.gameID}, (isCorrect) => {\n        this.setState({isCorrectAnswer: isCorrect ? 1 : -1});\n      })\n    });\n    // this.socket.on(\"number typers\", (n) => this.setState({ numTypers: n }));\n    this.socket.on(\"players\", (p) => this.setState({ players: p }));\n  }\n\n  handleNewGameID = (gameID) => {\n    this.setState({ gameID: gameID });\n  };\n\n  joinGame = () => {\n    this.setState({ isGameCreator: false });\n    this.socket.emit(\"join game\", this.state.gameID, (callbackData) => {\n      if (callbackData.sucess) {\n        this.setState({ appState: \"join\" });\n        // this.handleTyping(true);\n      } else {\n        console.log(callbackData.errorMsg);\n      }\n    });\n  };\n\n  createNewGame = () => {\n    this.setState({ isGameCreator: true, appState: \"join\" });\n    this.socket.emit(\"create new game\", {}, (gameID) => {\n      console.log(\"got gameid from callback: \" + gameID);\n      this.setState({ gameID: gameID });\n    });\n  };\n\n  startGame = () => {\n    this.socket.emit(\"start game\", {\n      gameID: this.state.gameID,\n      data: \"whatsup\",\n    });\n    this.setState({ appState: \"play\" });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // handleTyping = (isTyping) => {\n  //   this.socket.emit(\"handle typer\", {\n  //     gameID: this.state.gameID,\n  //     incNum: isTyping ? 1 : -1,\n  //   });\n  // };\n\n  handleSubmitName = () => {\n    // this.handleTyping(false);\n    this.socket.emit(\"submit name\", {\n      gameID: this.state.gameID,\n      playerName: this.state.playerName,\n    });\n  };\n\n  render() {\n    if (this.state.appState === \"init\") {\n      return (\n        <div>\n          <label for=\"gameID\">join a game:</label>\n          <input\n            id=\"gameID\"\n            name=\"gameID\"\n            placeholder=\"game code\"\n            value={this.state.gameID}\n            onChange={this.handleChange}\n          />\n          <button onClick={this.joinGame}>join</button>\n          <br />\n          ---- or ----\n          <br />\n          <button onClick={this.createNewGame}>create new game</button>\n        </div>\n      );\n    }\n    if (this.state.appState === \"join\") {\n      return (\n        <div>\n          <p>{this.state.gameID}</p>\n          <input\n            name=\"playerName\"\n            onChange={this.handleChange}\n            value={this.state.playerName}\n            placeholder=\"your name\"\n          />\n          <button onClick={this.handleSubmitName}>submit</button>\n          {this.state.isGameCreator && (\n            <button onClick={this.startGame}>start game</button>\n          )}\n          {/* {this.state.numTypers > 0 && (\n            <p>\n              <i>someone is joining...</i>\n            </p>\n          )} */}\n          {this.state.players && (\n            <ul>\n              <h2>Players:</h2>\n              {Object.entries(this.state.players).map(([id, pl]) => {\n                return <li key={id}>{pl.name}</li>;\n              })}\n            </ul>\n          )}\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.question && (\n          <div>\n            <p>{this.state.question.question}</p>\n            {this.state.question.answers.map((a) => (\n              <div>\n                <input type=\"radio\" id={a} name=\"answer\" />\n                <label for={a}>{a}</label>\n              </div>\n            ))}\n          </div>\n        )}\n        <p>{this.state.correctAnswer}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}