{"version":3,"sources":["InitPage.js","JoinPage.js","GamePage.js","App.js","serviceWorker.js","index.js"],"names":["Radio","displayName","value","target","setTarget","className","type","name","onChange","checked","InitPage","gameID","players","numberJoiners","isGameCreator","categories","submitName","startGame","emitJoining","useState","setName","category","setCategory","difficulty","setDifficulty","numberQuestions","setNumberQuestions","err","msg","startError","setStartError","nameSubmitted","setNameSubmitted","e","placeholder","onClick","preventDefault","map","pl","key","id","viewBox","fill","fillRule","d","clipRule","cat","inputMode","nQ","isNaN","error","JoinPage","joinGame","createGame","cont","setGameID","gameIDError","setGameIDError","htmlFor","autoComplete","autoCorrect","autoCapitalize","spellCheck","callbackData","sucess","console","log","errorMsg","GamePage","currentQuestion","correctAnswer","questionCountdown","gameOver","updatedIndex","userAnswer","setUserAnswer","index","question","answers","a","idx","disabled","width","score","style","GameCountdown","number","App","props","socket","emit","numInc","state","countdownTimer","n","timerName","setState","setTimeout","handleNewGameID","joinGameCallback","appState","initError","createNewGame","axios","get","SERVER","then","cats","data","gameProps","playerName","io","connect","numJoiners","this","on","countdownLength","questionLength","q","JSON","stringify","undefined","answer","questionNum","isCorrect","prevState","p","gameCountdown","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3315c33f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Radio({ displayName, value, target, setTarget }) {\n  return (\n    <label className=\"block\">\n      <input\n        type=\"radio\"\n        name=\"difficulty\"\n        value={value}\n        onChange={() => setTarget(value)}\n        checked={target === value}\n      />\n      <span className=\"ml-2\">{displayName}</span>\n    </label>\n  );\n}\n\nexport function InitPage({\n  gameID,\n  players,\n  numberJoiners,\n  isGameCreator,\n  categories,\n  submitName,\n  startGame,\n  emitJoining,\n}) {\n  let [name, setName] = useState(\"\"),\n    [category, setCategory] = useState(\"-1\"),\n    [difficulty, setDifficulty] = useState(\"-1\"),\n    [numberQuestions, setNumberQuestions] = useState(10),\n    [startError, setStartError] = useState({\n      err: false,\n      msg: \"\",\n    }),\n    [nameSubmitted, setNameSubmitted] = useState(false);\n\n  let handleSubmitName = (e) => {\n    e.preventDefault();\n    if (!nameSubmitted) {\n      // the player is submitting name for the first time\n      emitJoining();\n    }\n    setNameSubmitted(true);\n    submitName(gameID, name);\n  };\n\n  let handleStartGame = (e) => {\n    e.preventDefault();\n    // console.log(`name submitted is ${nameSubmitted}`);\n    if (!nameSubmitted) {\n      setStartError({\n        error: true,\n        msg: \"Please submit a name for yourself before starting the game.\",\n      });\n      return;\n    }\n    const nQ = +numberQuestions;\n    if (isNaN(nQ)) {\n      setStartError({\n        error: true,\n        msg: \"Please enter a number in the Number of Questions field.\",\n      });\n      return;\n    }\n    if (nQ < 1 || nQ > 50) {\n      setStartError({\n        error: true,\n        msg: \"Please enter a number of questions that is between 1 and 50.\",\n      });\n      return;\n    }\n    startGame({ gameID, category, difficulty, numberQuestions });\n  };\n\n  return (\n    <div className=\"bg-gray-100 w-screen h-screen absolute overflow-scroll\">\n      <div className=\"max-w-md mx-auto px-2 py-1\">\n        <div className=\"text-sm uppercase tracking-wide text-gray-700 w-max-content mx-auto\">\n          your game code:\n        </div>\n        <span className=\"block uppercase tracking-wider text-xl font-mono px-3 py-1 rounded border-gray-700 border-2 bg-white shadow text-gray-800 font-hairline mx-auto w-min-content\">\n          {gameID}\n        </span>\n\n        <div className=\"text-gray-600 italic text-xs leading-none text-center mt-2 mb-4\">\n          share this code with friends who want to join the game\n        </div>\n\n        <div className=\"w-max-content mx-auto\">\n          <form>\n            <input\n              className=\"p-2 shadow rounded-l text-sm\"\n              name=\"playerName\"\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              placeholder=\"your name\"\n            />\n            <button\n              type=\"submit\"\n              className=\"bg-purple-800 hover:bg-purple-700 text-white uppercase shadow py-2 px-4 tracking-wider text-sm rounded-r\"\n              onClick={handleSubmitName}\n            >\n              submit\n            </button>\n          </form>\n        </div>\n\n        <h2 className=\"uppercase tracking-wide text-sm text-gray-700 mb-2 mt-4\">\n          Players:\n        </h2>\n        {players && (\n          <ul>\n            {players.map((pl) => {\n              return (\n                <li key={pl.id}>\n                  <svg\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                    className=\"user w-8 h-8 inline pr-1\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                  {pl.name}\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        {!players && numberJoiners === 0 && (\n          <p className=\"px-3 py-1 mx-4 bg-gray-200 italic border-l-4 border-gray-800 rounded w-max-content\">\n            Nobody has joined the game.\n          </p>\n        )}\n        {numberJoiners - (nameSubmitted ? 0 : 1) > 0 && (\n          <ul>\n            <li className=\"animate-pulse\">\n              <svg\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                className=\"user w-8 h-8 inline pr-1\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n              <span className=\"italic gray-600 text-sm\">\n                someone is joining...\n              </span>\n            </li>\n          </ul>\n        )}\n\n        {isGameCreator && (\n          <form>\n            <h2 className=\"uppercase tracking-wide text-sm text-gray-700 mb-2 mt-4\">\n              Select a category:\n            </h2>\n            {categories && (\n              <select\n                className=\"p-2 rounded shadow max-w-full\"\n                name=\"selectedCategory\"\n                onChange={(e) => setCategory(e.target.value)}\n              >\n                <option value=\"-1\">Any category</option>\n                {categories.map((cat) => (\n                  <option key={cat.id} value={cat.id}>\n                    {cat.name}\n                  </option>\n                ))}\n              </select>\n            )}\n            <h2 className=\"uppercase tracking-wide text-sm text-gray-700 mb-2 mt-4\">\n              Select difficulty:\n            </h2>\n            <Radio\n              className=\"mb-2\"\n              name=\"difficulty\"\n              value=\"-1\"\n              displayName=\"Any difficulty\"\n              target={difficulty}\n              setTarget={setDifficulty}\n            />\n            <Radio\n              name=\"difficulty\"\n              value=\"easy\"\n              displayName=\"Easy\"\n              target={difficulty}\n              setTarget={setDifficulty}\n            />\n            <Radio\n              name=\"difficulty\"\n              value=\"medium\"\n              displayName=\"Medium\"\n              target={difficulty}\n              setTarget={setDifficulty}\n            />\n            <Radio\n              name=\"difficulty\"\n              value=\"hard\"\n              displayName=\"Hard\"\n              target={difficulty}\n              setTarget={setDifficulty}\n            />\n\n            <h2 className=\"uppercase tracking-wide text-sm text-gray-700 mb-2 mt-4\">\n              Number of questions:\n            </h2>\n            <input\n              className=\"p-2 rounded shadow\"\n              type=\"number\"\n              value={numberQuestions}\n              name=\"numberQuestions\"\n              inputMode=\"numeric\"\n              onChange={(e) => setNumberQuestions(e.target.value)}\n            ></input>\n            <button\n              type=\"submit\"\n              className=\"block mx-auto bg-teal-700 hover:bg-teal-600 text-white uppercase shadow py-2 px-4 tracking-wide text-sm rounded mt-4\"\n              onClick={handleStartGame}\n            >\n              start game\n            </button>\n            {startError.error && (\n              <div className=\"rounded border-red-800 border-l-4 bg-red-200 p-2 my-2 flex items-center text-red-800 text-sm leading-tight\">\n                <svg\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  className=\"exclamation w-8 h-8 inline pr-2 flex-initial\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n                <span className=\"flex-1\">{startError.msg}</span>\n              </div>\n            )}\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default InitPage;\n","import React, { useState } from \"react\";\n\nfunction JoinPage({ joinGame, createGame, cont }) {\n  let [gameID, setGameID] = useState(\"\"),\n    [gameIDError, setGameIDError] = useState({ error: false, msg: \"\" });\n\n  let handleJoinGame = (e) => {\n    e.preventDefault();\n    joinGame(gameID, (callbackData) => {\n      if (callbackData.sucess) {\n        console.log('success?')\n        // this.setState({ appState: \"join\" });\n        cont();\n      } else {\n        setGameIDError({ error: true, msg: callbackData.errorMsg });\n      }\n    });\n  };\n\n  return (\n    <div className=\"prism-bg object-cover h-screen w-screen absolute flex items-center justify-center\">\n      <div className=\"max-w-sm bg-gray-100 mx-4 p-6 shadow-lg rounded-md\">\n        <h1 className=\"font-hairline mb-2 text-4xl\">Multiplayer Trivia</h1>\n        <form className=\"w-full mb-4\">\n          <label htmlFor=\"gameID\" className=\"block font-bold mx-2\">\n            Join a game:\n          </label>\n          <input\n            className={\n              \"p-2 shadow rounded-l text-sm \" +\n              (gameIDError.error ? \" border-2 border-red-800\" : \"\")\n            }\n            id=\"gameID\"\n            name=\"gameID\"\n            placeholder=\"game code\"\n            value={gameID}\n            onChange={(e) => setGameID(e.target.value)}\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            spellCheck=\"false\"\n          />\n          <button\n            type=\"submit\"\n            className=\"bg-purple-800 hover:bg-purple-700 text-white uppercase shadow py-2 px-4 pr-10 tracking-wide text-sm rounded-r\"\n            onClick={handleJoinGame}\n          >\n            join\n            <svg\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className=\"user-group w-6 h-6 pl-1 pb-1 absolute inline\"\n            >\n              <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z\" />\n            </svg>\n          </button>\n          {gameIDError.error && (\n            <div className=\"rounded border-red-800 border-l-4 bg-red-200 p-2 my-2 flex items-center text-red-800 text-sm leading-tight\">\n              <svg\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                className=\"exclamation w-8 h-8 inline pr-2 flex-initial\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n              <span className=\"flex-1\">{gameIDError.msg}</span>\n            </div>\n          )}\n        </form>\n        <hr className=\"my-2\" />\n        <div className=\"font-bold mx-2\">Start a game:</div>\n        <button\n          className=\"w-full bg-teal-600 hover:bg-teal-500 text-white uppercase shadow py-2 px-4 tracking-wide rounded text-sm\"\n          onClick={createGame}\n        >\n          <svg\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"plus-circle w-6 h-6 pr-1 inline\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          create new game\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default JoinPage;\n","import React from \"react\";\n\nfunction GamePage({\n  currentQuestion,\n  correctAnswer,\n  numberQuestions,\n  questionCountdown,\n  gameOver,\n  players,\n  updatedIndex,\n  userAnswer,\n  setUserAnswer,\n}) {\n  return (\n    <div className=\"bg-gray-100 w-screen h-screen absolute\">\n      {currentQuestion && (\n        <div className=\"absolute w-full uppercase bg-purple-900 text-gray-300 text-xs tracking-wider shadow\">\n          <div className=\"max-w-sm mx-auto px-2 py-1\">\n            question {currentQuestion.index + 1} of {numberQuestions}\n          </div>\n        </div>\n      )}\n\n      <div className=\"max-w-sm mx-auto my-8 p-2\">\n        <div\n          className={\n            typeof correctAnswer === \"number\"\n              ? \"hidden\"\n              : \"fixed bottom-0 right-0 lg:absolute lg:-ml-16 lg:-mt-1 lg:bottom-auto lg:right-auto font-black text-2xl h-12 w-12 m-4 rounded-full bg-teal-700 text-gray-100 shadow\"\n          }\n        >\n          <div className=\"mx-auto min-w-0 pt-1 w-min-content\">\n            {questionCountdown}\n          </div>\n        </div>\n\n        {currentQuestion && (\n          <div>\n            <p>{currentQuestion.question}</p>\n            <form>\n              {currentQuestion.answers.map((a, idx) => (\n                <label\n                  key={idx}\n                  className={\n                    \"transition relative block bg-white py-2 px-4 border-solid rounded my-2 box-border border-2 cursor-pointer \" +\n                    (userAnswer === idx\n                      ? \"shadow-xl z-40 border-l-8 \"\n                      : \"shadow z-20 \") +\n                    (typeof correctAnswer === \"number\"\n                      ? correctAnswer === idx\n                        ? \"border-green-500\"\n                        : \"border-red-500\"\n                      : \"border-gray-800\")\n                  }\n                >\n                  <input\n                    className=\"hidden\"\n                    type=\"radio\"\n                    name=\"userAnswer\"\n                    value={idx}\n                    onChange={() => setUserAnswer(idx)}\n                    checked={userAnswer === idx}\n                    disabled={typeof correctAnswer === \"number\"}\n                  />\n                  {typeof correctAnswer === \"number\" && correctAnswer !== idx && (\n                    <svg\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                      className=\"x w-6 h-6 inline text-red-500\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  )}\n                  {correctAnswer === idx && (\n                    <svg\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                      className=\"check w-6 h-6 inline text-green-500\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  )}\n                  <span className=\"pl-2\">{a}</span>\n                </label>\n              ))}\n            </form>\n            <hr className=\"my-1\" />\n          </div>\n        )}\n        {gameOver && <h1 className=\"text-3xl mx-2 font-black\">Game over</h1>}\n        {players && (\n          <ul>\n            <h2 className=\"uppercase tracking-wide text-sm m-1 text-gray-700\">\n              Leaderboard:\n            </h2>\n            {players.map((pl) => {\n              const width =\n                updatedIndex === 0 ? 0 : (pl.score / updatedIndex) * 100;\n              return (\n                <li\n                  key={pl.id}\n                  className=\"bg-pink-300 overflow-hidden relative rounded shadow mb-2\"\n                >\n                  <span\n                    className=\"bg-pink-600 pl-2 py-1 whitespace-no-wrap inline-block text-white font-bold\"\n                    style={{ width: width + \"%\" }}\n                  >\n                    {pl.name}\n                  </span>\n                  <span className=\"py-1 pr-2 text-white right-0 absolute\">\n                    {pl.score} / {updatedIndex}\n                  </span>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default GamePage;\n","import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport \"./tailwind.css\";\nimport InitPage from \"./InitPage\";\nimport JoinPage from \"./JoinPage\";\nimport GamePage from \"./GamePage\";\n\nfunction GameCountdown({ number }) {\n  return (\n    <div className=\"absolute w-screen h-screen flex items-center\">\n      <div className=\"max-w-sm mx-auto content-center font-thin text-purple-700\">\n        starting game in\n        <div className=\"text-6xl font-black text-gray-900 text-center\">\n          {number}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.SERVER = \"http://localhost:4000\"; // \"https://crazytrivia.herokuapp.com\"; //\n    this.socket = io.connect(this.SERVER);\n    this.state = {\n      userAnswer: \"-1\",\n      playerName: \"\",\n      gameID: \"\",\n      // nameSubmitted: false,\n      appState: \"init\",\n      isGameCreator: false,\n      numJoiners: 0,\n      updatedIndex: 0,\n      gameOver: false,\n      // initError: {\n      //   error: false,\n      //   msg: \"\",\n      // },\n      // joinError: {\n      //   error: false,\n      //   msg: \"\",\n      // },\n    };\n  }\n\n  componentDidMount() {\n    this.socket.on(\n      \"start countdown\",\n      ({ countdownLength, questionLength, numberQuestions }) => {\n        this.countdownTimer(countdownLength, \"gameCountdown\");\n        this.setState({\n          appState: \"countdown\",\n          questionLength: questionLength,\n          countdownLength: countdownLength,\n          numberQuestions: numberQuestions,\n        });\n      }\n    );\n    this.socket.on(\"question\", (q) => {\n      console.log(`recieved question:  ${JSON.stringify(q)}`);\n      this.setState({\n        appState: \"play\",\n        currentQuestion: q,\n        correctAnswer: undefined,\n        userAnswer: \"-1\",\n      });\n      this.countdownTimer(this.state.questionLength, \"questionCountdown\");\n    });\n    this.socket.on(\"request answer\", () => {\n      this.socket.emit(\n        \"validate answer\",\n        {\n          answer: this.state.userAnswer,\n          questionNum: this.state.currentQuestion.index,\n          gameID: this.state.gameID,\n        },\n        ({ isCorrect, correctAnswer }) => {\n          this.setState((prevState) => {\n            return {\n              correctAnswer: correctAnswer,\n              updatedIndex: prevState.updatedIndex + 1,\n            };\n          });\n        }\n      );\n    });\n    this.socket.on(\"players\", (p) => {\n      console.log(`update players:  ${JSON.stringify(p)}`);\n      this.setState({ players: p });\n    });\n    this.socket.on(\"joining\", (n) => {\n      this.setState({ numJoiners: n });\n    });\n    this.socket.on(\"game over\", () => {\n      this.setState({\n        currentQuestion: undefined,\n        // correctAnswer: undefined,\n        userAnswer: \"-1\",\n        gameOver: true,\n      });\n    });\n  }\n\n  emitJoining = () => {\n    this.socket.emit(\"joining\", { numInc: -1, gameID: this.state.gameID });\n  };\n\n  countdownTimer = (n, timerName) => {\n    this.setState({ [timerName]: n });\n    if (n > 0) {\n      setTimeout(() => this.countdownTimer(n - 1, timerName), 1000);\n    }\n  };\n\n  handleNewGameID = (gameID) => {\n    this.setState({ gameID: gameID });\n  };\n\n  joinGame = (gameID, joinGameCallback) => {\n    console.log(`join game, game id: ${gameID}`);\n    this.setState({ isGameCreator: false, gameID: gameID });\n    this.socket.emit(\"join game\", gameID, (callbackData) => {\n      if (callbackData.sucess) {\n        this.setState({ appState: \"join\", gameID: callbackData.gameID }, () =>\n          console.log(`gameID changed to ${this.state.gameID}`)\n        );\n      } else {\n        this.setState({\n          initError: { error: true, msg: callbackData.errorMsg },\n        });\n      }\n    });\n  };\n\n  // joinGameCallback = ;\n\n  createNewGame = () => {\n    this.setState({ isGameCreator: true, appState: \"join\" });\n    this.socket.emit(\"create new game\", {}, (gameID) => {\n      console.log(`got gameid from callback: ${gameID}`);\n      this.setState({ gameID: gameID });\n    });\n    axios.get(`${this.SERVER}/categories`).then((cats) => {\n      this.setState({ categories: cats.data });\n    });\n  };\n\n  startGame = (gameProps) => {\n    this.socket.emit(\"start game\", gameProps);\n    this.setState({ appState: \"countdown\" });\n  };\n\n  // handleChange = (event) => {\n  //   this.setState({\n  //     [event.target.name]: event.target.value,\n  //   });\n  //   // if (event.target.name === \"gameID\") {\n  //   //   this.setState({\n  //   //     joinError: { error: false, msg: \"\" },\n  //   //   });\n  //   // }\n  // };\n\n  submitName = (gameID, playerName) => {\n    this.socket.emit(\"submit name\", {\n      gameID: gameID,\n      playerName: playerName,\n    });\n  };\n\n  render() {\n    if (this.state.appState === \"init\") {\n      return (\n        <JoinPage\n          joinGame={this.joinGame}\n          createGame={this.createNewGame}\n          cont={() => this.setState({ appState: \"join\" })}\n        ></JoinPage>\n      );\n    }\n    if (this.state.appState === \"join\") {\n      return (\n        <InitPage\n          gameID={this.state.gameID}\n          players={this.state.players}\n          numberJoiners={this.state.numJoiners}\n          isGameCreator={this.state.isGameCreator}\n          categories={this.state.categories}\n          submitName={this.submitName}\n          startGame={this.startGame}\n          emitJoining={this.emitJoining}\n        ></InitPage>\n      );\n    } else if (this.state.appState === \"countdown\") {\n      return <GameCountdown number={this.state.gameCountdown} />;\n    }\n    return (\n      <GamePage\n        currentQuestion={this.state.currentQuestion}\n        correctAnswer={this.state.correctAnswer}\n        numberQuestions={this.state.numberQuestions}\n        questionCountdown={this.state.questionCountdown}\n        gameOver={this.state.gameOver}\n        players={this.state.players}\n        updatedIndex={this.state.updatedIndex}\n        userAnswer={this.state.userAnswer}\n        setUserAnswer={(idx) => this.setState({ userAnswer: idx })}\n      ></GamePage>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}