{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","countdownTimer","n","timerName","setState","setTimeout","handleNewGameID","gameID","joinGame","isGameCreator","socket","emit","state","callbackData","sucess","appState","initError","error","msg","errorMsg","createNewGame","console","log","axios","get","SERVER","then","cats","categories","data","startGame","nameSubmitted","nQ","numberQuestions","isNaN","joinError","category","selectedCategory","difficulty","handleChange","event","target","name","value","handleSubmitName","numInc","playerName","io","connect","userAnswer","numTypers","updatedIndex","gameOver","this","on","countdownLength","questionLength","q","JSON","stringify","currentQuestion","correctAnswer","undefined","answer","questionNum","index","isCorrect","prevState","p","players","numJoiners","currentQ","className","htmlFor","id","placeholder","onChange","onClick","viewBox","fill","d","fillRule","clipRule","Object","entries","map","pl","key","cat","type","checked","inputMode","class","gameCountdown","questionCountdown","question","answers","a","idx","toString","disabled","width","score","style","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.29c064c6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport \"./tailwind.css\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.SERVER = \"https://crazytrivia.herokuapp.com\"; //\"http://localhost:4000\"\n    this.socket = io.connect(this.SERVER);\n    this.state = {\n      userAnswer: \"-1\",\n      playerName: \"\",\n      gameID: \"\",\n      nameSubmitted: false,\n      appState: \"init\",\n      isGameCreator: false,\n      numTypers: 0,\n      numberQuestions: 10,\n      difficulty: \"-1\",\n      selectedCategory: \"-1\",\n      updatedIndex: 0,\n      gameOver: false,\n      initError: {\n        error: false,\n        msg: \"\",\n      },\n      joinError: {\n        error: false,\n        msg: \"\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.socket.on(\n      \"start countdown\",\n      ({ countdownLength, questionLength, numberQuestions }) => {\n        this.countdownTimer(countdownLength, \"gameCountdown\");\n        this.setState({\n          appState: \"countdown\",\n          questionLength: questionLength,\n          countdownLength: countdownLength,\n          numberQuestions: numberQuestions,\n        });\n      }\n    );\n    this.socket.on(\"question\", (q) => {\n      console.log(`recieved question:  ${JSON.stringify(q)}`);\n      this.setState({\n        appState: \"play\",\n        currentQuestion: q,\n        correctAnswer: undefined,\n        userAnswer: \"-1\",\n      });\n      this.countdownTimer(this.state.questionLength, \"questionCountdown\");\n    });\n    this.socket.on(\"request answer\", () => {\n      // validate on client or server side????????\n      // server also needs to know for the score... so might as well do it there....\n      this.socket.emit(\n        \"validate answer\",\n        {\n          answer: this.state.userAnswer,\n          questionNum: this.state.currentQuestion.index,\n          gameID: this.state.gameID,\n        },\n        ({ isCorrect, correctAnswer }) => {\n          this.setState((prevState) => {\n            return {\n              correctAnswer: correctAnswer,\n              updatedIndex: prevState.updatedIndex + 1,\n            };\n          });\n        }\n      );\n    });\n    this.socket.on(\"players\", (p) => {\n      console.log(`update players:  ${JSON.stringify(p)}`);\n      this.setState({ players: p });\n    });\n    this.socket.on(\"joining\", (n) => {\n      this.setState({ numJoiners: this.state.nameSubmitted ? n : n - 1 });\n    });\n    this.socket.on(\"game over\", () => {\n      console.log(\"GAME OVER\");\n      this.setState({\n        currentQuestion: undefined,\n        // correctAnswer: undefined,\n        userAnswer: \"-1\",\n        gameOver: true,\n      });\n    });\n  }\n\n  countdownTimer = (n, timerName) => {\n    this.setState({ [timerName]: n });\n    if (n > 0) {\n      setTimeout(() => this.countdownTimer(n - 1, timerName), 1000);\n    }\n  };\n\n  handleNewGameID = (gameID) => {\n    this.setState({ gameID: gameID });\n  };\n\n  joinGame = () => {\n    this.setState({ isGameCreator: false });\n    this.socket.emit(\"join game\", this.state.gameID, (callbackData) => {\n      if (callbackData.sucess) {\n        this.setState({ appState: \"join\" });\n      } else {\n        this.setState({\n          initError: { error: true, msg: callbackData.errorMsg },\n        });\n      }\n    });\n  };\n\n  createNewGame = () => {\n    this.setState({ isGameCreator: true, appState: \"join\" });\n    this.socket.emit(\"create new game\", {}, (gameID) => {\n      console.log(`got gameid from callback: ${gameID}`);\n      this.setState({ gameID: gameID });\n    });\n    axios.get(`${this.SERVER}/categories`).then((cats) => {\n      this.setState({ categories: cats.data });\n    });\n  };\n\n  startGame = () => {\n    if (!this.state.nameSubmitted) {\n      this.setState({\n        joinError: {\n          error: true,\n          msg: \"Please submit a name for yourself before starting the game.\",\n        },\n      });\n      return;\n    }\n    const nQ = +this.state.numberQuestions;\n    if (isNaN(nQ)) {\n      this.setState({\n        joinError: {\n          error: true,\n          msg: \"Please enter a number in the Number of Questions field.\",\n        },\n      });\n      return;\n    }\n    if (nQ < 1 || nQ > 50) {\n      this.setState({\n        joinError: {\n          error: true,\n          msg: \"Please enter a number of questions that is between 1 and 50.\",\n        },\n      });\n      return;\n    }\n    this.socket.emit(\"start game\", {\n      gameID: this.state.gameID,\n      category: this.state.selectedCategory,\n      difficulty: this.state.difficulty,\n      numberQuestions: this.state.numberQuestions,\n    });\n    this.setState({ appState: \"countdown\" });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n    if (event.target.name === \"gameID\") {\n      this.setState({\n        joinError: { error: false, msg: \"\" },\n      });\n    }\n  };\n\n  // handleTyping = (isTyping) => {\n  //   this.socket.emit(\"handle typer\", {\n  //     gameID: this.state.gameID,\n  //     incNum: isTyping ? 1 : -1,\n  //   });\n  // };\n\n  handleSubmitName = () => {\n    if (!this.state.nameSubmitted) {\n      // the player is submitting name for the first time\n      this.socket.emit(\"joining\", { numInc: -1, gameID: this.state.gameID });\n    }\n    this.socket.emit(\"submit name\", {\n      gameID: this.state.gameID,\n      playerName: this.state.playerName,\n    });\n    this.setState({ nameSubmitted: true });\n  };\n\n  render() {\n    const currentQ = this.state.currentQuestion;\n    if (this.state.appState === \"init\") {\n      return (\n        <div className=\"prism-bg object-cover h-screen w-screen absolute flex items-center justify-center\">\n          <div className=\"max-w-sm bg-gray-100 mx-4 p-6 shadow-lg rounded-md\">\n            <h1 className=\"font-hairline mb-2 text-4xl\">Multiplayer Trivia</h1>\n            <div className=\"w-full mb-4\">\n              <label htmlFor=\"gameID\" className=\"block font-bold mx-2\">\n                Join a game:\n              </label>\n              <input\n                className={\n                  \"p-2 shadow rounded-l text-sm \" +\n                  (this.state.initError.error ? \" border-2 border-red-800\" : \"\")\n                }\n                id=\"gameID\"\n                name=\"gameID\"\n                placeholder=\"game code\"\n                value={this.state.gameID}\n                onChange={this.handleChange}\n              />\n              <button\n                className=\"bg-purple-800 hover:bg-purple-700 text-white uppercase shadow py-2 px-4 pr-10 tracking-wide text-sm rounded-r\"\n                onClick={this.joinGame}\n              >\n                join\n                <svg\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  className=\"user-group w-6 h-6 pl-1 pb-1 absolute inline\"\n                >\n                  <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z\" />\n                </svg>\n              </button>\n              {this.state.initError.error && (\n                <div className=\"rounded border-red-800 border-l-4 bg-red-200 p-2 my-2 flex items-center text-red-800 text-sm leading-tight\">\n                  <svg\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                    className=\"exclamation w-8 h-8 inline pr-2 flex-initial\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                  <span className=\"flex-1\">{this.state.initError.msg}</span>\n                </div>\n              )}\n            </div>\n            <hr className=\"my-2\" />\n            <div className=\"font-bold mx-2\">Start a game:</div>\n            <button\n              className=\"w-full bg-teal-600 hover:bg-teal-500 text-white uppercase shadow py-2 px-4 tracking-wide rounded text-sm\"\n              onClick={this.createNewGame}\n            >\n              <svg\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                className=\"plus-circle w-6 h-6 pr-1 inline\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n              create new game\n            </button>\n          </div>\n        </div>\n      );\n    }\n    if (this.state.appState === \"join\") {\n      return (\n        <div className=\"bg-gray-100 w-screen h-screen absolute overflow-scroll\">\n          <div className=\"max-w-md mx-auto px-2 py-1\">\n            <div className=\"text-sm uppercase tracking-wide text-gray-700 w-max-content mx-auto\">\n              your game code:\n            </div>\n            <span className=\"block uppercase tracking-wider text-xl font-mono px-3 py-1 rounded border-gray-700 border-2 bg-white shadow text-gray-800 font-hairline mx-auto w-min-content\">\n              {this.state.gameID}\n            </span>\n\n            <div className=\"text-gray-600 italic text-xs leading-none text-center mt-2 mb-4\">\n              share this code with friends who want to join the game\n            </div>\n\n            <div className=\"w-max-content mx-auto\">\n              <input\n                className=\"p-2 shadow rounded-l text-sm\"\n                name=\"playerName\"\n                onChange={this.handleChange}\n                value={this.state.playerName}\n                placeholder=\"your name\"\n              />\n              <button\n                className=\"bg-purple-800 hover:bg-purple-700 text-white uppercase shadow py-2 px-4 tracking-wider text-sm rounded-r\"\n                onClick={this.handleSubmitName}\n              >\n                submit\n              </button>\n            </div>\n\n            <h2 className=\"uppercase tracking-wide text-sm text-gray-700 mb-2 mt-4\">\n              Players:\n            </h2>\n            {this.state.players && (\n              <ul>\n                {Object.entries(this.state.players).map(([id, pl]) => {\n                  return (\n                    <li key={id}>\n                      <svg\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                        className=\"user w-8 h-8 inline pr-1\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                      {pl.name}\n                    </li>\n                  );\n                })}\n              </ul>\n            )}\n            {!this.state.players && this.state.numJoiners === 0 && (\n              <p className=\"px-3 py-1 mx-4 bg-gray-200 italic border-l-4 border-gray-800 rounded w-max-content\">Nobody has joined the game.</p>\n            )}\n            {this.state.numJoiners > 0 && (\n              <ul>\n                <li className=\"animate-pulse\">\n                  <svg\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                    className=\"user w-8 h-8 inline pr-1\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                  <span className=\"italic gray-600 text-sm\">\n                    someone is joining...\n                  </span>\n                </li>\n              </ul>\n            )}\n\n            {this.state.isGameCreator && (\n              <div>\n                <h2 className=\"uppercase tracking-wide text-sm text-gray-700 mb-2 mt-4\">\n                  Select a category:\n                </h2>\n                {this.state.categories && (\n                  <select\n                    className=\"p-2 rounded shadow max-w-full\"\n                    name=\"selectedCategory\"\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"-1\">Any category</option>\n                    {this.state.categories.map((cat) => (\n                      <option key={cat.id} value={cat.id}>\n                        {cat.name}\n                      </option>\n                    ))}\n                  </select>\n                )}\n                <h2 className=\"uppercase tracking-wide text-sm text-gray-700 mb-2 mt-4\">\n                  Select difficulty:\n                </h2>\n                <label className=\"block mb-1\">\n                  <input\n                    type=\"radio\"\n                    name=\"difficulty\"\n                    value={-1}\n                    onChange={this.handleChange}\n                    checked={this.state.difficulty === \"-1\"}\n                  />\n                  <span className=\"ml-2\">Any difficulty</span>\n                </label>\n                {/* <hr className=\" w-32\"/> */}\n                <label className=\"block mt-1\">\n                  <input\n                    type=\"radio\"\n                    name=\"difficulty\"\n                    value=\"easy\"\n                    onChange={this.handleChange}\n                    checked={this.state.difficulty === \"easy\"}\n                  />\n                  <span className=\"ml-2\">Easy</span>\n                </label>\n                <label className=\"block\">\n                  <input\n                    type=\"radio\"\n                    name=\"difficulty\"\n                    value=\"medium\"\n                    onChange={this.handleChange}\n                    checked={this.state.difficulty === \"medium\"}\n                  />\n                  <span className=\"ml-2\">Medium</span>\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"difficulty\"\n                    value=\"hard\"\n                    onChange={this.handleChange}\n                    checked={this.state.difficulty === \"hard\"}\n                  />\n                  <span className=\"ml-2\">Hard</span>\n                </label>\n                <h2 className=\"uppercase tracking-wide text-sm text-gray-700 mb-2 mt-4\">\n                  Number of questions:\n                </h2>\n                <input\n                  className=\"p-2 rounded shadow\"\n                  type=\"number\"\n                  value={this.state.numberQuestions}\n                  name=\"numberQuestions\"\n                  inputMode=\"numeric\"\n                  onChange={this.handleChange}\n                ></input>\n                <button\n                  className=\"block mx-auto bg-teal-700 hover:bg-teal-600 text-white uppercase shadow py-2 px-4 tracking-wide text-sm rounded mt-4\"\n                  onClick={this.startGame}\n                >\n                  start game\n                </button>\n                {this.state.joinError.error && (\n                  <div className=\"rounded border-red-800 border-l-4 bg-red-200 p-2 my-2 flex items-center text-red-800 text-sm leading-tight\">\n                    <svg\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                      className=\"exclamation w-8 h-8 inline pr-2 flex-initial\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                    <span className=\"flex-1\">{this.state.joinError.msg}</span>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    } else if (this.state.appState === \"countdown\") {\n      return (\n        <div class=\"absolute w-screen h-screen flex items-center\">\n          <div className=\"max-w-sm mx-auto content-center font-thin text-purple-700\">\n            starting game in\n            <div className=\"text-6xl font-black animate-ping text-gray-900 text-center\">\n              {this.state.gameCountdown}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"bg-gray-100 w-screen h-screen absolute\">\n        {currentQ && (\n          <div className=\"absolute w-full uppercase bg-purple-900 text-gray-300 text-xs tracking-wider shadow\">\n            <div className=\"max-w-sm mx-auto px-2 py-1\">\n              question {currentQ.index + 1} of {this.state.numberQuestions}\n            </div>\n          </div>\n        )}\n\n        <div className=\"max-w-sm mx-auto my-8 p-2\">\n          <div\n            className={\n              typeof this.state.correctAnswer === \"number\"\n                ? \"hidden\"\n                : \"fixed bottom-0 right-0 lg:absolute lg:-ml-16 lg:-mt-1 lg:bottom-auto lg:right-auto font-black text-2xl h-12 w-12 m-4 rounded-full bg-teal-700 text-gray-100 shadow\"\n            }\n          >\n            <div className=\"mx-auto animate-bounce min-w-0 pt-3 w-min-content\">\n              {this.state.questionCountdown}\n            </div>\n          </div>\n\n          {currentQ && (\n            <div>\n              <p>{currentQ.question}</p>\n              {currentQ.answers.map((a, idx) => (\n                <label\n                  key={idx}\n                  className={\n                    \"transition relative block bg-white py-2 px-4 border-solid rounded my-2 box-border border-2 \" +\n                    (this.state.userAnswer === idx.toString()\n                      ? \"shadow-xl z-40 border-l-8 \"\n                      : \"shadow z-20 \") +\n                    (typeof this.state.correctAnswer === \"number\"\n                      ? this.state.correctAnswer === idx\n                        ? \"border-green-500\"\n                        : \"border-red-500\"\n                      : \"border-gray-800\")\n                  }\n                >\n                  <input\n                    className=\"hidden\"\n                    type=\"radio\"\n                    name=\"userAnswer\"\n                    value={idx}\n                    onChange={this.handleChange}\n                    checked={this.state.userAnswer === idx.toString()}\n                    disabled={typeof this.state.correctAnswer === \"number\"}\n                  />\n                  {typeof this.state.correctAnswer === \"number\" &&\n                    this.state.correctAnswer !== idx && (\n                      <svg\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                        className=\"x w-6 h-6 inline text-red-500\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                    )}\n                  {this.state.correctAnswer === idx && (\n                    <svg\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                      className=\"check w-6 h-6 inline text-green-500\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  )}\n                  <span className=\"pl-2\">{a}</span>\n                </label>\n              ))}\n              <hr className=\"my-1\" />\n            </div>\n          )}\n          {this.state.gameOver && (\n            <h1 className=\"text-3xl mx-2 font-black\">Game over</h1>\n          )}\n          {this.state.players && (\n            <ul>\n              <h2 className=\"uppercase tracking-wide text-sm m-1 text-gray-700\">\n                Leaderboard:\n              </h2>\n              {Object.entries(this.state.players).map(([id, pl]) => {\n                const width =\n                  this.state.updatedIndex === 0\n                    ? 0\n                    : (pl.score / this.state.updatedIndex) * 100;\n                return (\n                  <li\n                    key={id}\n                    className=\"bg-pink-300 overflow-hidden relative rounded shadow mb-2\"\n                  >\n                    <span\n                      className=\"bg-pink-600 pl-2 py-1 whitespace-no-wrap inline-block text-white font-bold\"\n                      style={{ width: width + \"%\" }}\n                    >\n                      {pl.name}\n                    </span>\n                    <span className=\"py-1 pr-2 text-white right-0 absolute\">\n                      {pl.score} / {this.state.updatedIndex}\n                    </span>\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}